import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.priyanka.yadav.models.Employee;
import com.priyanka.yadav.repositories.EmployeeRepository;

@RestController
@RequestMapping("/employee")
public class EmployeeController {
	
	@Autowired
	EmployeeRepository eRepo;
	
	@PostMapping("/add")
	public Employee addEmployee(@RequestBody Employee emp){
		Employee e = eRepo.save(emp);
		return e;
	}
	
	@GetMapping("/find/{id}")
	public Optional<Employee> searchEmployeeById(@PathVariable("id") String id){
		Optional<Employee> e = eRepo.findById(id);
		return e;
	}
	
	@DeleteMapping("/delete/{id}")
	public String deleteEmployeeById(@PathVariable("id") String id){
		eRepo.deleteById(id);
		return "Employee " + id + " deleted!";
	}
	
	@GetMapping("/findall")
	public List<Employee> findEmployees(){		
		return (List<Employee>) eRepo.findAll();
	}
	
	@PutMapping("/update")
	public Employee updateEmployee(@RequestBody Employee emp){
		Employee e = eRepo.save(emp);
		return e;
	}
}


import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

@Document("Employee")
public class Employee {
	@Id
	private String employeeId;
	private String employeeName;
	private String employeeDepartment;
	private String employeeDesignation;
	private Double employeeSalary;

	@Override
	public String toString() {
		return "Employee [employeeId=" + employeeId + ", employeeName=" + employeeName + ", employeeDepartment="
				+ employeeDepartment + ", employeeDesignation=" + employeeDesignation + ", employeeSalary="
				+ employeeSalary + "]";
	}

	public Employee(String employeeName, String employeeDepartment, String employeeDesignation, Double employeeSalary) {
		super();
		this.employeeName = employeeName;
		this.employeeDepartment = employeeDepartment;
		this.employeeDesignation = employeeDesignation;
		this.employeeSalary = employeeSalary;
	}

	public String getEmployeeId() {
		return employeeId;
	}

	public String getEmployeeName() {
		return employeeName;
	}

	public String getEmployeeDepartment() {
		return employeeDepartment;
	}

	public String getEmployeeDesignation() {
		return employeeDesignation;
	}

	public Double getEmployeeSalary() {
		return employeeSalary;
	}

	public void setEmployeeId(String employeeId) {
		this.employeeId = employeeId;
	}

	public void setEmployeeName(String employeeName) {
		this.employeeName = employeeName;
	}

	public void setEmployeeDepartment(String employeeDepartment) {
		this.employeeDepartment = employeeDepartment;
	}

	public void setEmployeeDesignation(String employeeDesignation) {
		this.employeeDesignation = employeeDesignation;
	}

	public void setEmployeeSalary(Double employeeSalary) {
		this.employeeSalary = employeeSalary;
	}

}



import org.springframework.data.repository.CrudRepository;

import com.priyanka.yadav.models.Employee;

public interface EmployeeRepository extends CrudRepository<Employee, String> {
	
}



import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;

@SpringBootApplication
@EnableMongoRepositories
public class RestQ5EmployeeManagementApplication {

	public static void main(String[] args) {
		SpringApplication.run(RestQ5EmployeeManagementApplication.class, args);
	}

}



import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;

public class ServletInitializer extends SpringBootServletInitializer {

	@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
		return application.sources(RestQ5EmployeeManagementApplication.class);
	}

}


application properties:
server.port=10005
spring.data.mongodb.uri=mongodb+srv://Username:Password@samplecluster.2pkxf.mongodb.net/mySpringDatabase?retryWrites=true&w=majority
spring.data.mongodb.database=DatabaseName
